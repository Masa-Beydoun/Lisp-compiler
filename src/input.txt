(string-array '("apple\\napple
" "apricot\\\"apricot" "avocado\\\\" "banana\\t" "cherry\\\""))
(setq a 5)

;/////////////////////////////////

(if t 5 6)
(if nil 5 6)
(if 4 5 6)

; ////////////////////////////

(+ 3 3.4)

; ////////////////////////////

(car (cons 4 5))

; ////////////////////////////

(setq a 5)

; ////////////////////////////

(loop
(setq a (+ a 1))
    (when (> a 7)
        (return a)))

; ////////////////////////////

(defun fact (x)
        (if (> x 0)
        (* x (fact (- x 1)))
1))

(fact 5) ; This will return 120


; ////////////////////////////


(defun bar (x)
(setq x (* x 3))
(setq x (/ x 2))
(+ x 4))

(bar 6)

; ////////////////////////////

(let ((a 2) (b 3) (c 0))(setq c (+ a b))c)

; ////////////////////////////


(defvar *special* 5)
(print *special*)


; ////////////////////////////


(defun foo (x)
(return-from foo 3)
x)
(foo 17)


; ////////////////////////////




 (if t 5 6)
 (if nil 5 6)
 (if 4 5 6)

; ////////////////////////////

(defstruct foo bar baaz quux)

; ////////////////////////////


(sort '(2 1 5 4 6) # ' <)

; ////////////////////////////

do
    (
        ( a 3  (+ 4 4 ) )
        ( a 3  (+ 4 4 ) )
    )
    (
        (
            ( 4  a )
        )
        (+ 2 2 )
    )

    ; ////////////////////////////


    #'(lambda (x) (+ x 3))

    ; ////////////////////////////

    (do ((x '(1 2 3 4 5) (cdr x))
       (y nil))
      ((null x) (reverse y))
    (push (+ (car x) 2) y))